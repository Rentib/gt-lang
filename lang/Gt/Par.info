-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Gt/Par.y
-----------------------------------------------------------------------------

state 42 contains 1 shift/reduce conflicts.
state 60 contains 1 shift/reduce conflicts.
state 71 contains 1 reduce/reduce conflicts.
state 121 contains 1 reduce/reduce conflicts.
state 166 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pTranslationUnit_internal -> TranslationUnit   (0)
	Ident -> L_Ident                                   (1)
	Char -> L_charac                                   (2)
	Integer -> L_integ                                 (3)
	TranslationUnit -> ListDecl                        (4)
	Type -> Type1                                      (5)
	Type -> Type1 '[' ']'                              (6)
	Type1 -> '(' Type ')'                              (7)
	Type1 -> 'int'                                     (8)
	Type1 -> 'bool'                                    (9)
	Type1 -> 'char'                                    (10)
	Type1 -> 'void'                                    (11)
	Type1 -> 'const' Type                              (12)
	Type1 -> '(' ListType ')' '->' Type                (13)
	ListType ->                                        (14)
	ListType -> Type                                   (15)
	ListType -> Type ',' ListType                      (16)
	Arg -> Ident ':' Type                              (17)
	Arg -> '&' Ident ':' Type                          (18)
	ListArg ->                                         (19)
	ListArg -> Arg                                     (20)
	ListArg -> Arg ',' ListArg                         (21)
	Block -> '{' ListDecl ListInstr '}'                (22)
	Decl -> 'var' Ident ':' Type ';'                   (23)
	Decl -> 'var' Ident '=' Expr ';'                   (24)
	Decl -> 'const' Ident '=' Expr ';'                 (25)
	Decl -> 'fn' Ident '(' ListArg ')' '->' Type Block   (26)
	ListDecl ->                                        (27)
	ListDecl -> Decl ListDecl                          (28)
	Instr -> Block                                     (29)
	Instr -> Expr ';'                                  (30)
	Instr -> 'if' '(' Expr ')' Instr                   (31)
	Instr -> 'if' '(' Expr ')' Instr 'else' Instr      (32)
	Instr -> 'while' '(' Expr ')' Instr                (33)
	Instr -> 'do' Instr 'while' '(' Expr ')' ';'       (34)
	Instr -> 'for' '(' Expr ';' Expr ';' Expr ')' Instr   (35)
	Instr -> 'continue' ';'                            (36)
	Instr -> 'break' ';'                               (37)
	Instr -> 'return' Expr ';'                         (38)
	ListInstr ->                                       (39)
	ListInstr -> Instr ListInstr                       (40)
	Expr -> Expr1                                      (41)
	Expr -> '\\' '(' ListArg ')' '->' Type '=>' Block   (42)
	Expr ->                                            (43)
	Expr1 -> Expr2                                     (44)
	Expr1 -> Expr9 AssignOp Expr2                      (45)
	Expr2 -> Expr3                                     (46)
	Expr2 -> '(' Expr2 '||' Expr3 ')'                  (47)
	Expr3 -> Expr4                                     (48)
	Expr3 -> '(' Expr3 '&&' Expr4 ')'                  (49)
	Expr4 -> Expr5                                     (50)
	Expr4 -> Expr4 EqOp Expr5                          (51)
	Expr5 -> Expr6                                     (52)
	Expr5 -> Expr5 RelOp Expr6                         (53)
	Expr6 -> Expr7                                     (54)
	Expr6 -> Expr6 AddOp Expr7                         (55)
	Expr7 -> Expr8                                     (56)
	Expr7 -> Expr7 MulOp Expr8                         (57)
	Expr8 -> Expr9                                     (58)
	Expr8 -> UnaryOp Expr9                             (59)
	Expr9 -> '(' Expr ')'                              (60)
	Expr9 -> Integer                                   (61)
	Expr9 -> Char                                      (62)
	Expr9 -> 'true'                                    (63)
	Expr9 -> 'false'                                   (64)
	Expr9 -> Ident                                     (65)
	Expr9 -> Expr9 '[' Expr ']'                        (66)
	Expr9 -> Expr9 '(' ListExpr ')'                    (67)
	ListExpr ->                                        (68)
	ListExpr -> Expr                                   (69)
	ListExpr -> Expr ',' ListExpr                      (70)
	UnaryOp -> '+'                                     (71)
	UnaryOp -> '-'                                     (72)
	UnaryOp -> '!'                                     (73)
	UnaryOp -> '~'                                     (74)
	MulOp -> '*'                                       (75)
	MulOp -> '/'                                       (76)
	MulOp -> '%'                                       (77)
	AddOp -> '+'                                       (78)
	AddOp -> '-'                                       (79)
	RelOp -> '<'                                       (80)
	RelOp -> '<='                                      (81)
	RelOp -> '>'                                       (82)
	RelOp -> '>='                                      (83)
	EqOp -> '=='                                       (84)
	EqOp -> '!='                                       (85)
	AssignOp -> '='                                    (86)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	':'            { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'=>'           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'['            { PT _ (TS _ 23) }
	'\\'           { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'bool'         { PT _ (TS _ 26) }
	'break'        { PT _ (TS _ 27) }
	'char'         { PT _ (TS _ 28) }
	'const'        { PT _ (TS _ 29) }
	'continue'     { PT _ (TS _ 30) }
	'do'           { PT _ (TS _ 31) }
	'else'         { PT _ (TS _ 32) }
	'false'        { PT _ (TS _ 33) }
	'fn'           { PT _ (TS _ 34) }
	'for'          { PT _ (TS _ 35) }
	'if'           { PT _ (TS _ 36) }
	'int'          { PT _ (TS _ 37) }
	'return'       { PT _ (TS _ 38) }
	'true'         { PT _ (TS _ 39) }
	'var'          { PT _ (TS _ 40) }
	'void'         { PT _ (TS _ 41) }
	'while'        { PT _ (TS _ 42) }
	'{'            { PT _ (TS _ 43) }
	'||'           { PT _ (TS _ 44) }
	'}'            { PT _ (TS _ 45) }
	'~'            { PT _ (TS _ 46) }
	L_Ident        { PT _ (TV _) }
	L_charac       { PT _ (TC _) }
	L_integ        { PT _ (TI _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pTranslationUnit_internal rule  0
	Ident           rule  1
	Char            rule  2
	Integer         rule  3
	TranslationUnit rule  4
	Type            rules 5, 6
	Type1           rules 7, 8, 9, 10, 11, 12, 13
	ListType        rules 14, 15, 16
	Arg             rules 17, 18
	ListArg         rules 19, 20, 21
	Block           rule  22
	Decl            rules 23, 24, 25, 26
	ListDecl        rules 27, 28
	Instr           rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
	ListInstr       rules 39, 40
	Expr            rules 41, 42, 43
	Expr1           rules 44, 45
	Expr2           rules 46, 47
	Expr3           rules 48, 49
	Expr4           rules 50, 51
	Expr5           rules 52, 53
	Expr6           rules 54, 55
	Expr7           rules 56, 57
	Expr8           rules 58, 59
	Expr9           rules 60, 61, 62, 63, 64, 65, 66, 67
	ListExpr        rules 68, 69, 70
	UnaryOp         rules 71, 72, 73, 74
	MulOp           rules 75, 76, 77
	AddOp           rules 78, 79
	RelOp           rules 80, 81, 82, 83
	EqOp            rules 84, 85
	AssignOp        rule  86

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pTranslationUnit_internal -> . TranslationUnit    (rule 0)

	'const'        shift, and enter state 6
	'fn'           shift, and enter state 7
	'var'          shift, and enter state 8
	%eof           reduce using rule 27

	TranslationUnitgoto state 3
	Decl           goto state 4
	ListDecl       goto state 5

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pTranslationUnit_internal -> TranslationUnit .    (rule 0)

	%eof           accept


State 4

	ListDecl -> Decl . ListDecl                         (rule 28)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'\\'           reduce using rule 27
	'break'        reduce using rule 27
	'const'        shift, and enter state 6
	'continue'     reduce using rule 27
	'do'           reduce using rule 27
	'false'        reduce using rule 27
	'fn'           shift, and enter state 7
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'var'          shift, and enter state 8
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'~'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_charac       reduce using rule 27
	L_integ        reduce using rule 27
	%eof           reduce using rule 27

	Decl           goto state 4
	ListDecl       goto state 12

State 5

	TranslationUnit -> ListDecl .                       (rule 4)

	%eof           reduce using rule 4


State 6

	Decl -> 'const' . Ident '=' Expr ';'                (rule 25)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Decl -> 'fn' . Ident '(' ListArg ')' '->' Type Block    (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 10

State 8

	Decl -> 'var' . Ident ':' Type ';'                  (rule 23)
	Decl -> 'var' . Ident '=' Expr ';'                  (rule 24)

	L_Ident        shift, and enter state 2

	Ident          goto state 9

State 9

	Decl -> 'var' Ident . ':' Type ';'                  (rule 23)
	Decl -> 'var' Ident . '=' Expr ';'                  (rule 24)

	':'            shift, and enter state 15
	'='            shift, and enter state 16


State 10

	Decl -> 'fn' Ident . '(' ListArg ')' '->' Type Block    (rule 26)

	'('            shift, and enter state 14


State 11

	Decl -> 'const' Ident . '=' Expr ';'                (rule 25)

	'='            shift, and enter state 13


State 12

	ListDecl -> Decl ListDecl .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'\\'           reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'do'           reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	'~'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_charac       reduce using rule 28
	L_integ        reduce using rule 28
	%eof           reduce using rule 28


State 13

	Decl -> 'const' Ident '=' . Expr ';'                (rule 25)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 53
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 14

	Decl -> 'fn' Ident '(' . ListArg ')' '->' Type Block    (rule 26)

	'&'            shift, and enter state 52
	')'            reduce using rule 19
	L_Ident        shift, and enter state 2

	Ident          goto state 49
	Arg            goto state 50
	ListArg        goto state 51

State 15

	Decl -> 'var' Ident ':' . Type ';'                  (rule 23)

	'('            shift, and enter state 43
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 41
	Type1          goto state 42

State 16

	Decl -> 'var' Ident '=' . Expr ';'                  (rule 24)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 20
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 17

	Expr9 -> Ident .                                    (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'='            reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 18

	Expr9 -> Char .                                     (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 19

	Expr9 -> Integer .                                  (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'='            reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 20

	Decl -> 'var' Ident '=' Expr . ';'                  (rule 24)

	';'            shift, and enter state 89


State 21

	Expr -> Expr1 .                                     (rule 41)

	')'            reduce using rule 41
	','            reduce using rule 41
	';'            reduce using rule 41
	']'            reduce using rule 41


State 22

	Expr1 -> Expr2 .                                    (rule 44)

	')'            reduce using rule 44
	','            reduce using rule 44
	';'            reduce using rule 44
	']'            reduce using rule 44


State 23

	Expr2 -> Expr3 .                                    (rule 46)

	')'            reduce using rule 46
	','            reduce using rule 46
	';'            reduce using rule 46
	']'            reduce using rule 46


State 24

	Expr3 -> Expr4 .                                    (rule 48)
	Expr4 -> Expr4 . EqOp Expr5                         (rule 51)

	'!='           shift, and enter state 87
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	','            reduce using rule 48
	';'            reduce using rule 48
	'=='           shift, and enter state 88
	']'            reduce using rule 48
	'||'           reduce using rule 48

	EqOp           goto state 86

State 25

	Expr4 -> Expr5 .                                    (rule 50)
	Expr5 -> Expr5 . RelOp Expr6                        (rule 53)

	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'<'            shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           reduce using rule 50
	'>'            shift, and enter state 84
	'>='           shift, and enter state 85
	']'            reduce using rule 50
	'||'           reduce using rule 50

	RelOp          goto state 81

State 26

	Expr5 -> Expr6 .                                    (rule 52)
	Expr6 -> Expr6 . AddOp Expr7                        (rule 55)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 79
	','            reduce using rule 52
	'-'            shift, and enter state 80
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 78

State 27

	Expr6 -> Expr7 .                                    (rule 54)
	Expr7 -> Expr7 . MulOp Expr8                        (rule 57)

	'!='           reduce using rule 54
	'%'            shift, and enter state 75
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            shift, and enter state 76
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            shift, and enter state 77
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54

	MulOp          goto state 74

State 28

	Expr7 -> Expr8 .                                    (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 29

	Expr1 -> Expr9 . AssignOp Expr2                     (rule 45)
	Expr8 -> Expr9 .                                    (rule 58)
	Expr9 -> Expr9 . '[' Expr ']'                       (rule 66)
	Expr9 -> Expr9 . '(' ListExpr ')'                   (rule 67)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            shift, and enter state 71
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            shift, and enter state 72
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            shift, and enter state 73
	']'            reduce using rule 58
	'||'           reduce using rule 58

	AssignOp       goto state 70

State 30

	Expr8 -> UnaryOp . Expr9                            (rule 59)

	'('            shift, and enter state 69
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr9          goto state 68

State 31

	UnaryOp -> '!' .                                    (rule 73)

	'('            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_charac       reduce using rule 73
	L_integ        reduce using rule 73


State 32

	Expr2 -> '(' . Expr2 '||' Expr3 ')'                 (rule 47)
	Expr3 -> '(' . Expr3 '&&' Expr4 ')'                 (rule 49)
	Expr9 -> '(' . Expr ')'                             (rule 60)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 43
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 65
	Expr1          goto state 21
	Expr2          goto state 66
	Expr3          goto state 67
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 33

	UnaryOp -> '+' .                                    (rule 71)

	'('            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_charac       reduce using rule 71
	L_integ        reduce using rule 71


State 34

	UnaryOp -> '-' .                                    (rule 72)

	'('            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_charac       reduce using rule 72
	L_integ        reduce using rule 72


State 35

	Expr -> '\\' . '(' ListArg ')' '->' Type '=>' Block    (rule 42)

	'('            shift, and enter state 64


State 36

	Expr9 -> 'false' .                                  (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'='            reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 37

	Expr9 -> 'true' .                                   (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 38

	UnaryOp -> '~' .                                    (rule 74)

	'('            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_charac       reduce using rule 74
	L_integ        reduce using rule 74


State 39

	Char -> L_charac .                                  (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 40

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 41

	Decl -> 'var' Ident ':' Type . ';'                  (rule 23)

	';'            shift, and enter state 63


State 42

	Type -> Type1 .                                     (rule 5)
	Type -> Type1 . '[' ']'                             (rule 6)

	')'            reduce using rule 5
	','            reduce using rule 5
	';'            reduce using rule 5
	'=>'           reduce using rule 5
	'['            shift, and enter state 62
			(reduce using rule 5)

	'{'            reduce using rule 5


State 43

	Type1 -> '(' . Type ')'                             (rule 7)
	Type1 -> '(' . ListType ')' '->' Type               (rule 13)

	'('            shift, and enter state 43
	')'            reduce using rule 14
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 60
	Type1          goto state 42
	ListType       goto state 61

State 44

	Type1 -> 'bool' .                                   (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9
	';'            reduce using rule 9
	'=>'           reduce using rule 9
	'['            reduce using rule 9
	'{'            reduce using rule 9


State 45

	Type1 -> 'char' .                                   (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10
	';'            reduce using rule 10
	'=>'           reduce using rule 10
	'['            reduce using rule 10
	'{'            reduce using rule 10


State 46

	Type1 -> 'const' . Type                             (rule 12)

	'('            shift, and enter state 43
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 59
	Type1          goto state 42

State 47

	Type1 -> 'int' .                                    (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8
	';'            reduce using rule 8
	'=>'           reduce using rule 8
	'['            reduce using rule 8
	'{'            reduce using rule 8


State 48

	Type1 -> 'void' .                                   (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11
	';'            reduce using rule 11
	'=>'           reduce using rule 11
	'['            reduce using rule 11
	'{'            reduce using rule 11


State 49

	Arg -> Ident . ':' Type                             (rule 17)

	':'            shift, and enter state 58


State 50

	ListArg -> Arg .                                    (rule 20)
	ListArg -> Arg . ',' ListArg                        (rule 21)

	')'            reduce using rule 20
	','            shift, and enter state 57


State 51

	Decl -> 'fn' Ident '(' ListArg . ')' '->' Type Block    (rule 26)

	')'            shift, and enter state 56


State 52

	Arg -> '&' . Ident ':' Type                         (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 55

State 53

	Decl -> 'const' Ident '=' Expr . ';'                (rule 25)

	';'            shift, and enter state 54


State 54

	Decl -> 'const' Ident '=' Expr ';' .                (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'\\'           reduce using rule 25
	'break'        reduce using rule 25
	'const'        reduce using rule 25
	'continue'     reduce using rule 25
	'do'           reduce using rule 25
	'false'        reduce using rule 25
	'fn'           reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'var'          reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	'~'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_charac       reduce using rule 25
	L_integ        reduce using rule 25
	%eof           reduce using rule 25


State 55

	Arg -> '&' Ident . ':' Type                         (rule 18)

	':'            shift, and enter state 110


State 56

	Decl -> 'fn' Ident '(' ListArg ')' . '->' Type Block    (rule 26)

	'->'           shift, and enter state 109


State 57

	ListArg -> Arg ',' . ListArg                        (rule 21)

	'&'            shift, and enter state 52
	')'            reduce using rule 19
	L_Ident        shift, and enter state 2

	Ident          goto state 49
	Arg            goto state 50
	ListArg        goto state 108

State 58

	Arg -> Ident ':' . Type                             (rule 17)

	'('            shift, and enter state 43
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 107
	Type1          goto state 42

State 59

	Type1 -> 'const' Type .                             (rule 12)

	')'            reduce using rule 12
	','            reduce using rule 12
	';'            reduce using rule 12
	'=>'           reduce using rule 12
	'['            reduce using rule 12
	'{'            reduce using rule 12


State 60

	Type1 -> '(' Type . ')'                             (rule 7)
	ListType -> Type .                                  (rule 15)
	ListType -> Type . ',' ListType                     (rule 16)

	')'            shift, and enter state 105
			(reduce using rule 15)

	','            shift, and enter state 106


State 61

	Type1 -> '(' ListType . ')' '->' Type               (rule 13)

	')'            shift, and enter state 104


State 62

	Type -> Type1 '[' . ']'                             (rule 6)

	']'            shift, and enter state 103


State 63

	Decl -> 'var' Ident ':' Type ';' .                  (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'\\'           reduce using rule 23
	'break'        reduce using rule 23
	'const'        reduce using rule 23
	'continue'     reduce using rule 23
	'do'           reduce using rule 23
	'false'        reduce using rule 23
	'fn'           reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	'~'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_charac       reduce using rule 23
	L_integ        reduce using rule 23
	%eof           reduce using rule 23


State 64

	Expr -> '\\' '(' . ListArg ')' '->' Type '=>' Block    (rule 42)

	'&'            shift, and enter state 52
	')'            reduce using rule 19
	L_Ident        shift, and enter state 2

	Ident          goto state 49
	Arg            goto state 50
	ListArg        goto state 102

State 65

	Expr9 -> '(' Expr . ')'                             (rule 60)

	')'            shift, and enter state 101


State 66

	Expr1 -> Expr2 .                                    (rule 44)
	Expr2 -> '(' Expr2 . '||' Expr3 ')'                 (rule 47)

	')'            reduce using rule 44
	'||'           shift, and enter state 100


State 67

	Expr2 -> Expr3 .                                    (rule 46)
	Expr3 -> '(' Expr3 . '&&' Expr4 ')'                 (rule 49)

	'&&'           shift, and enter state 99
	')'            reduce using rule 46
	'||'           reduce using rule 46


State 68

	Expr8 -> UnaryOp Expr9 .                            (rule 59)
	Expr9 -> Expr9 . '[' Expr ']'                       (rule 66)
	Expr9 -> Expr9 . '(' ListExpr ')'                   (rule 67)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            shift, and enter state 71
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            shift, and enter state 73
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 69

	Expr9 -> '(' . Expr ')'                             (rule 60)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 43
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 65
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 70

	Expr1 -> Expr9 AssignOp . Expr2                     (rule 45)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr2          goto state 98
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 91
	UnaryOp        goto state 30

State 71

	Expr9 -> Expr9 '(' . ListExpr ')'                   (rule 67)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 68
			(reduce using rule 43)

	'+'            shift, and enter state 33
	','            reduce using rule 43
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 96
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	ListExpr       goto state 97
	UnaryOp        goto state 30

State 72

	AssignOp -> '=' .                                   (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'+'            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'true'         reduce using rule 86
	'~'            reduce using rule 86
	L_Ident        reduce using rule 86
	L_charac       reduce using rule 86
	L_integ        reduce using rule 86


State 73

	Expr9 -> Expr9 '[' . Expr ']'                       (rule 66)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	']'            reduce using rule 43
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 95
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 74

	Expr7 -> Expr7 MulOp . Expr8                        (rule 57)

	'!'            shift, and enter state 31
	'('            shift, and enter state 69
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr8          goto state 94
	Expr9          goto state 91
	UnaryOp        goto state 30

State 75

	MulOp -> '%' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	'~'            reduce using rule 77
	L_Ident        reduce using rule 77
	L_charac       reduce using rule 77
	L_integ        reduce using rule 77


State 76

	MulOp -> '*' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'+'            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	'~'            reduce using rule 75
	L_Ident        reduce using rule 75
	L_charac       reduce using rule 75
	L_integ        reduce using rule 75


State 77

	MulOp -> '/' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	'~'            reduce using rule 76
	L_Ident        reduce using rule 76
	L_charac       reduce using rule 76
	L_integ        reduce using rule 76


State 78

	Expr6 -> Expr6 AddOp . Expr7                        (rule 55)

	'!'            shift, and enter state 31
	'('            shift, and enter state 69
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr7          goto state 93
	Expr8          goto state 28
	Expr9          goto state 91
	UnaryOp        goto state 30

State 79

	AddOp -> '+' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	'~'            reduce using rule 78
	L_Ident        reduce using rule 78
	L_charac       reduce using rule 78
	L_integ        reduce using rule 78


State 80

	AddOp -> '-' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'+'            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	'~'            reduce using rule 79
	L_Ident        reduce using rule 79
	L_charac       reduce using rule 79
	L_integ        reduce using rule 79


State 81

	Expr5 -> Expr5 RelOp . Expr6                        (rule 53)

	'!'            shift, and enter state 31
	'('            shift, and enter state 69
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr6          goto state 92
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 91
	UnaryOp        goto state 30

State 82

	RelOp -> '<' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'+'            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	'~'            reduce using rule 80
	L_Ident        reduce using rule 80
	L_charac       reduce using rule 80
	L_integ        reduce using rule 80


State 83

	RelOp -> '<=' .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'+'            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'true'         reduce using rule 81
	'~'            reduce using rule 81
	L_Ident        reduce using rule 81
	L_charac       reduce using rule 81
	L_integ        reduce using rule 81


State 84

	RelOp -> '>' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'+'            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'true'         reduce using rule 82
	'~'            reduce using rule 82
	L_Ident        reduce using rule 82
	L_charac       reduce using rule 82
	L_integ        reduce using rule 82


State 85

	RelOp -> '>=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'+'            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'true'         reduce using rule 83
	'~'            reduce using rule 83
	L_Ident        reduce using rule 83
	L_charac       reduce using rule 83
	L_integ        reduce using rule 83


State 86

	Expr4 -> Expr4 EqOp . Expr5                         (rule 51)

	'!'            shift, and enter state 31
	'('            shift, and enter state 69
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr5          goto state 90
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 91
	UnaryOp        goto state 30

State 87

	EqOp -> '!=' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'+'            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'true'         reduce using rule 85
	'~'            reduce using rule 85
	L_Ident        reduce using rule 85
	L_charac       reduce using rule 85
	L_integ        reduce using rule 85


State 88

	EqOp -> '==' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'+'            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'true'         reduce using rule 84
	'~'            reduce using rule 84
	L_Ident        reduce using rule 84
	L_charac       reduce using rule 84
	L_integ        reduce using rule 84


State 89

	Decl -> 'var' Ident '=' Expr ';' .                  (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'\\'           reduce using rule 24
	'break'        reduce using rule 24
	'const'        reduce using rule 24
	'continue'     reduce using rule 24
	'do'           reduce using rule 24
	'false'        reduce using rule 24
	'fn'           reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'var'          reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	'~'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_charac       reduce using rule 24
	L_integ        reduce using rule 24
	%eof           reduce using rule 24


State 90

	Expr4 -> Expr4 EqOp Expr5 .                         (rule 51)
	Expr5 -> Expr5 . RelOp Expr6                        (rule 53)

	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'<'            shift, and enter state 82
	'<='           shift, and enter state 83
	'=='           reduce using rule 51
	'>'            shift, and enter state 84
	'>='           shift, and enter state 85
	']'            reduce using rule 51
	'||'           reduce using rule 51

	RelOp          goto state 81

State 91

	Expr8 -> Expr9 .                                    (rule 58)
	Expr9 -> Expr9 . '[' Expr ']'                       (rule 66)
	Expr9 -> Expr9 . '(' ListExpr ')'                   (rule 67)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            shift, and enter state 71
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            shift, and enter state 73
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 92

	Expr5 -> Expr5 RelOp Expr6 .                        (rule 53)
	Expr6 -> Expr6 . AddOp Expr7                        (rule 55)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 79
	','            reduce using rule 53
	'-'            shift, and enter state 80
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 78

State 93

	Expr6 -> Expr6 AddOp Expr7 .                        (rule 55)
	Expr7 -> Expr7 . MulOp Expr8                        (rule 57)

	'!='           reduce using rule 55
	'%'            shift, and enter state 75
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            shift, and enter state 76
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            shift, and enter state 77
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55

	MulOp          goto state 74

State 94

	Expr7 -> Expr7 MulOp Expr8 .                        (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 95

	Expr9 -> Expr9 '[' Expr . ']'                       (rule 66)

	']'            shift, and enter state 122


State 96

	ListExpr -> Expr .                                  (rule 69)
	ListExpr -> Expr . ',' ListExpr                     (rule 70)

	')'            reduce using rule 69
	','            shift, and enter state 121


State 97

	Expr9 -> Expr9 '(' ListExpr . ')'                   (rule 67)

	')'            shift, and enter state 120


State 98

	Expr1 -> Expr9 AssignOp Expr2 .                     (rule 45)

	')'            reduce using rule 45
	','            reduce using rule 45
	';'            reduce using rule 45
	']'            reduce using rule 45


State 99

	Expr3 -> '(' Expr3 '&&' . Expr4 ')'                 (rule 49)

	'!'            shift, and enter state 31
	'('            shift, and enter state 69
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr4          goto state 119
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 91
	UnaryOp        goto state 30

State 100

	Expr2 -> '(' Expr2 '||' . Expr3 ')'                 (rule 47)

	'!'            shift, and enter state 31
	'('            shift, and enter state 118
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr3          goto state 117
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 91
	UnaryOp        goto state 30

State 101

	Expr9 -> '(' Expr ')' .                             (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'='            reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 102

	Expr -> '\\' '(' ListArg . ')' '->' Type '=>' Block    (rule 42)

	')'            shift, and enter state 116


State 103

	Type -> Type1 '[' ']' .                             (rule 6)

	')'            reduce using rule 6
	','            reduce using rule 6
	';'            reduce using rule 6
	'=>'           reduce using rule 6
	'['            reduce using rule 6
	'{'            reduce using rule 6


State 104

	Type1 -> '(' ListType ')' . '->' Type               (rule 13)

	'->'           shift, and enter state 115


State 105

	Type1 -> '(' Type ')' .                             (rule 7)

	')'            reduce using rule 7
	','            reduce using rule 7
	';'            reduce using rule 7
	'=>'           reduce using rule 7
	'['            reduce using rule 7
	'{'            reduce using rule 7


State 106

	ListType -> Type ',' . ListType                     (rule 16)

	'('            shift, and enter state 43
	')'            reduce using rule 14
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 113
	Type1          goto state 42
	ListType       goto state 114

State 107

	Arg -> Ident ':' Type .                             (rule 17)

	')'            reduce using rule 17
	','            reduce using rule 17


State 108

	ListArg -> Arg ',' ListArg .                        (rule 21)

	')'            reduce using rule 21


State 109

	Decl -> 'fn' Ident '(' ListArg ')' '->' . Type Block    (rule 26)

	'('            shift, and enter state 43
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 112
	Type1          goto state 42

State 110

	Arg -> '&' Ident ':' . Type                         (rule 18)

	'('            shift, and enter state 43
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 111
	Type1          goto state 42

State 111

	Arg -> '&' Ident ':' Type .                         (rule 18)

	')'            reduce using rule 18
	','            reduce using rule 18


State 112

	Decl -> 'fn' Ident '(' ListArg ')' '->' Type . Block    (rule 26)

	'{'            shift, and enter state 129

	Block          goto state 128

State 113

	ListType -> Type .                                  (rule 15)
	ListType -> Type . ',' ListType                     (rule 16)

	')'            reduce using rule 15
	','            shift, and enter state 106


State 114

	ListType -> Type ',' ListType .                     (rule 16)

	')'            reduce using rule 16


State 115

	Type1 -> '(' ListType ')' '->' . Type               (rule 13)

	'('            shift, and enter state 43
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 127
	Type1          goto state 42

State 116

	Expr -> '\\' '(' ListArg ')' . '->' Type '=>' Block    (rule 42)

	'->'           shift, and enter state 126


State 117

	Expr2 -> '(' Expr2 '||' Expr3 . ')'                 (rule 47)

	')'            shift, and enter state 125


State 118

	Expr3 -> '(' . Expr3 '&&' Expr4 ')'                 (rule 49)
	Expr9 -> '(' . Expr ')'                             (rule 60)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 43
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 65
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 67
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 119

	Expr3 -> '(' Expr3 '&&' Expr4 . ')'                 (rule 49)
	Expr4 -> Expr4 . EqOp Expr5                         (rule 51)

	'!='           shift, and enter state 87
	')'            shift, and enter state 124
	'=='           shift, and enter state 88

	EqOp           goto state 86

State 120

	Expr9 -> Expr9 '(' ListExpr ')' .                   (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'='            reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67


State 121

	ListExpr -> Expr ',' . ListExpr                     (rule 70)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 68
			(reduce using rule 43)

	'+'            shift, and enter state 33
	','            reduce using rule 43
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 96
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	ListExpr       goto state 123
	UnaryOp        goto state 30

State 122

	Expr9 -> Expr9 '[' Expr ']' .                       (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'='            reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 123

	ListExpr -> Expr ',' ListExpr .                     (rule 70)

	')'            reduce using rule 70


State 124

	Expr3 -> '(' Expr3 '&&' Expr4 ')' .                 (rule 49)

	'&&'           reduce using rule 49
	')'            reduce using rule 49
	','            reduce using rule 49
	';'            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 125

	Expr2 -> '(' Expr2 '||' Expr3 ')' .                 (rule 47)

	')'            reduce using rule 47
	','            reduce using rule 47
	';'            reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 126

	Expr -> '\\' '(' ListArg ')' '->' . Type '=>' Block    (rule 42)

	'('            shift, and enter state 43
	'bool'         shift, and enter state 44
	'char'         shift, and enter state 45
	'const'        shift, and enter state 46
	'int'          shift, and enter state 47
	'void'         shift, and enter state 48

	Type           goto state 131
	Type1          goto state 42

State 127

	Type1 -> '(' ListType ')' '->' Type .               (rule 13)

	')'            reduce using rule 13
	','            reduce using rule 13
	';'            reduce using rule 13
	'=>'           reduce using rule 13
	'['            reduce using rule 13
	'{'            reduce using rule 13


State 128

	Decl -> 'fn' Ident '(' ListArg ')' '->' Type Block .    (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'\\'           reduce using rule 26
	'break'        reduce using rule 26
	'const'        reduce using rule 26
	'continue'     reduce using rule 26
	'do'           reduce using rule 26
	'false'        reduce using rule 26
	'fn'           reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'var'          reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	'~'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_charac       reduce using rule 26
	L_integ        reduce using rule 26
	%eof           reduce using rule 26


State 129

	Block -> '{' . ListDecl ListInstr '}'               (rule 22)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'\\'           reduce using rule 27
	'break'        reduce using rule 27
	'const'        shift, and enter state 6
	'continue'     reduce using rule 27
	'do'           reduce using rule 27
	'false'        reduce using rule 27
	'fn'           shift, and enter state 7
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'var'          shift, and enter state 8
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	'~'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_charac       reduce using rule 27
	L_integ        reduce using rule 27

	Decl           goto state 4
	ListDecl       goto state 130

State 130

	Block -> '{' ListDecl . ListInstr '}'               (rule 22)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'break'        shift, and enter state 137
	'continue'     shift, and enter state 138
	'do'           shift, and enter state 139
	'false'        shift, and enter state 36
	'for'          shift, and enter state 140
	'if'           shift, and enter state 141
	'return'       shift, and enter state 142
	'true'         shift, and enter state 37
	'while'        shift, and enter state 143
	'{'            shift, and enter state 129
	'}'            reduce using rule 39
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Block          goto state 133
	Instr          goto state 134
	ListInstr      goto state 135
	Expr           goto state 136
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 131

	Expr -> '\\' '(' ListArg ')' '->' Type . '=>' Block    (rule 42)

	'=>'           shift, and enter state 132


State 132

	Expr -> '\\' '(' ListArg ')' '->' Type '=>' . Block    (rule 42)

	'{'            shift, and enter state 129

	Block          goto state 154

State 133

	Instr -> Block .                                    (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'\\'           reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'do'           reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	'~'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_charac       reduce using rule 29
	L_integ        reduce using rule 29


State 134

	ListInstr -> Instr . ListInstr                      (rule 40)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'break'        shift, and enter state 137
	'continue'     shift, and enter state 138
	'do'           shift, and enter state 139
	'false'        shift, and enter state 36
	'for'          shift, and enter state 140
	'if'           shift, and enter state 141
	'return'       shift, and enter state 142
	'true'         shift, and enter state 37
	'while'        shift, and enter state 143
	'{'            shift, and enter state 129
	'}'            reduce using rule 39
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Block          goto state 133
	Instr          goto state 134
	ListInstr      goto state 153
	Expr           goto state 136
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 135

	Block -> '{' ListDecl ListInstr . '}'               (rule 22)

	'}'            shift, and enter state 152


State 136

	Instr -> Expr . ';'                                 (rule 30)

	';'            shift, and enter state 151


State 137

	Instr -> 'break' . ';'                              (rule 37)

	';'            shift, and enter state 150


State 138

	Instr -> 'continue' . ';'                           (rule 36)

	';'            shift, and enter state 149


State 139

	Instr -> 'do' . Instr 'while' '(' Expr ')' ';'      (rule 34)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'break'        shift, and enter state 137
	'continue'     shift, and enter state 138
	'do'           shift, and enter state 139
	'false'        shift, and enter state 36
	'for'          shift, and enter state 140
	'if'           shift, and enter state 141
	'return'       shift, and enter state 142
	'true'         shift, and enter state 37
	'while'        shift, and enter state 143
	'{'            shift, and enter state 129
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Block          goto state 133
	Instr          goto state 148
	Expr           goto state 136
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 140

	Instr -> 'for' . '(' Expr ';' Expr ';' Expr ')' Instr    (rule 35)

	'('            shift, and enter state 147


State 141

	Instr -> 'if' . '(' Expr ')' Instr                  (rule 31)
	Instr -> 'if' . '(' Expr ')' Instr 'else' Instr     (rule 32)

	'('            shift, and enter state 146


State 142

	Instr -> 'return' . Expr ';'                        (rule 38)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 145
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 143

	Instr -> 'while' . '(' Expr ')' Instr               (rule 33)

	'('            shift, and enter state 144


State 144

	Instr -> 'while' '(' . Expr ')' Instr               (rule 33)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 43
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 159
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 145

	Instr -> 'return' Expr . ';'                        (rule 38)

	';'            shift, and enter state 158


State 146

	Instr -> 'if' '(' . Expr ')' Instr                  (rule 31)
	Instr -> 'if' '(' . Expr ')' Instr 'else' Instr     (rule 32)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 43
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 157
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 147

	Instr -> 'for' '(' . Expr ';' Expr ';' Expr ')' Instr    (rule 35)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 156
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 148

	Instr -> 'do' Instr . 'while' '(' Expr ')' ';'      (rule 34)

	'while'        shift, and enter state 155


State 149

	Instr -> 'continue' ';' .                           (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'\\'           reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'do'           reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'return'       reduce using rule 36
	'true'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	'~'            reduce using rule 36
	L_Ident        reduce using rule 36
	L_charac       reduce using rule 36
	L_integ        reduce using rule 36


State 150

	Instr -> 'break' ';' .                              (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'\\'           reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'do'           reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'return'       reduce using rule 37
	'true'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	'~'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_charac       reduce using rule 37
	L_integ        reduce using rule 37


State 151

	Instr -> Expr ';' .                                 (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'\\'           reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'do'           reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	'~'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_charac       reduce using rule 30
	L_integ        reduce using rule 30


State 152

	Block -> '{' ListDecl ListInstr '}' .               (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'+'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'\\'           reduce using rule 22
	']'            reduce using rule 22
	'break'        reduce using rule 22
	'const'        reduce using rule 22
	'continue'     reduce using rule 22
	'do'           reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'fn'           reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	'~'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_charac       reduce using rule 22
	L_integ        reduce using rule 22
	%eof           reduce using rule 22


State 153

	ListInstr -> Instr ListInstr .                      (rule 40)

	'}'            reduce using rule 40


State 154

	Expr -> '\\' '(' ListArg ')' '->' Type '=>' Block .    (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42
	';'            reduce using rule 42
	']'            reduce using rule 42


State 155

	Instr -> 'do' Instr 'while' . '(' Expr ')' ';'      (rule 34)

	'('            shift, and enter state 163


State 156

	Instr -> 'for' '(' Expr . ';' Expr ';' Expr ')' Instr    (rule 35)

	';'            shift, and enter state 162


State 157

	Instr -> 'if' '(' Expr . ')' Instr                  (rule 31)
	Instr -> 'if' '(' Expr . ')' Instr 'else' Instr     (rule 32)

	')'            shift, and enter state 161


State 158

	Instr -> 'return' Expr ';' .                        (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'\\'           reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'do'           reduce using rule 38
	'else'         reduce using rule 38
	'false'        reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	'~'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_charac       reduce using rule 38
	L_integ        reduce using rule 38


State 159

	Instr -> 'while' '(' Expr . ')' Instr               (rule 33)

	')'            shift, and enter state 160


State 160

	Instr -> 'while' '(' Expr ')' . Instr               (rule 33)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'break'        shift, and enter state 137
	'continue'     shift, and enter state 138
	'do'           shift, and enter state 139
	'false'        shift, and enter state 36
	'for'          shift, and enter state 140
	'if'           shift, and enter state 141
	'return'       shift, and enter state 142
	'true'         shift, and enter state 37
	'while'        shift, and enter state 143
	'{'            shift, and enter state 129
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Block          goto state 133
	Instr          goto state 167
	Expr           goto state 136
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 161

	Instr -> 'if' '(' Expr ')' . Instr                  (rule 31)
	Instr -> 'if' '(' Expr ')' . Instr 'else' Instr     (rule 32)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'break'        shift, and enter state 137
	'continue'     shift, and enter state 138
	'do'           shift, and enter state 139
	'false'        shift, and enter state 36
	'for'          shift, and enter state 140
	'if'           shift, and enter state 141
	'return'       shift, and enter state 142
	'true'         shift, and enter state 37
	'while'        shift, and enter state 143
	'{'            shift, and enter state 129
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Block          goto state 133
	Instr          goto state 166
	Expr           goto state 136
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 162

	Instr -> 'for' '(' Expr ';' . Expr ';' Expr ')' Instr    (rule 35)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 165
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 163

	Instr -> 'do' Instr 'while' '(' . Expr ')' ';'      (rule 34)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 43
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 164
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 164

	Instr -> 'do' Instr 'while' '(' Expr . ')' ';'      (rule 34)

	')'            shift, and enter state 170


State 165

	Instr -> 'for' '(' Expr ';' Expr . ';' Expr ')' Instr    (rule 35)

	';'            shift, and enter state 169


State 166

	Instr -> 'if' '(' Expr ')' Instr .                  (rule 31)
	Instr -> 'if' '(' Expr ')' Instr . 'else' Instr     (rule 32)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'\\'           reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'do'           reduce using rule 31
	'else'         shift, and enter state 168
			(reduce using rule 31)

	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	'~'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_charac       reduce using rule 31
	L_integ        reduce using rule 31


State 167

	Instr -> 'while' '(' Expr ')' Instr .               (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'\\'           reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'do'           reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	'~'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_charac       reduce using rule 33
	L_integ        reduce using rule 33


State 168

	Instr -> 'if' '(' Expr ')' Instr 'else' . Instr     (rule 32)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'break'        shift, and enter state 137
	'continue'     shift, and enter state 138
	'do'           shift, and enter state 139
	'false'        shift, and enter state 36
	'for'          shift, and enter state 140
	'if'           shift, and enter state 141
	'return'       shift, and enter state 142
	'true'         shift, and enter state 37
	'while'        shift, and enter state 143
	'{'            shift, and enter state 129
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Block          goto state 133
	Instr          goto state 173
	Expr           goto state 136
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 169

	Instr -> 'for' '(' Expr ';' Expr ';' . Expr ')' Instr    (rule 35)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	')'            reduce using rule 43
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	'\\'           shift, and enter state 35
	'false'        shift, and enter state 36
	'true'         shift, and enter state 37
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Expr           goto state 172
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 170

	Instr -> 'do' Instr 'while' '(' Expr ')' . ';'      (rule 34)

	';'            shift, and enter state 171


State 171

	Instr -> 'do' Instr 'while' '(' Expr ')' ';' .      (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'\\'           reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'do'           reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	'~'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_charac       reduce using rule 34
	L_integ        reduce using rule 34


State 172

	Instr -> 'for' '(' Expr ';' Expr ';' Expr . ')' Instr    (rule 35)

	')'            shift, and enter state 174


State 173

	Instr -> 'if' '(' Expr ')' Instr 'else' Instr .     (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'\\'           reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'do'           reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	'~'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_charac       reduce using rule 32
	L_integ        reduce using rule 32


State 174

	Instr -> 'for' '(' Expr ';' Expr ';' Expr ')' . Instr    (rule 35)

	'!'            shift, and enter state 31
	'('            shift, and enter state 32
	'+'            shift, and enter state 33
	'-'            shift, and enter state 34
	';'            reduce using rule 43
	'\\'           shift, and enter state 35
	'break'        shift, and enter state 137
	'continue'     shift, and enter state 138
	'do'           shift, and enter state 139
	'false'        shift, and enter state 36
	'for'          shift, and enter state 140
	'if'           shift, and enter state 141
	'return'       shift, and enter state 142
	'true'         shift, and enter state 37
	'while'        shift, and enter state 143
	'{'            shift, and enter state 129
	'~'            shift, and enter state 38
	L_Ident        shift, and enter state 2
	L_charac       shift, and enter state 39
	L_integ        shift, and enter state 40

	Ident          goto state 17
	Char           goto state 18
	Integer        goto state 19
	Block          goto state 133
	Instr          goto state 175
	Expr           goto state 136
	Expr1          goto state 21
	Expr2          goto state 22
	Expr3          goto state 23
	Expr4          goto state 24
	Expr5          goto state 25
	Expr6          goto state 26
	Expr7          goto state 27
	Expr8          goto state 28
	Expr9          goto state 29
	UnaryOp        goto state 30

State 175

	Instr -> 'for' '(' Expr ';' Expr ';' Expr ')' Instr .    (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'\\'           reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'do'           reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	'~'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_charac       reduce using rule 35
	L_integ        reduce using rule 35


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 87
Number of terminals: 49
Number of non-terminals: 32
Number of states: 176
